// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace message {
class IpacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ipacket>
      _instance;
} _Ipacket_default_instance_;
class PlayerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerData>
      _instance;
} _PlayerData_default_instance_;
class W_C_CreatePlayerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W_C_CreatePlayerResponse>
      _instance;
} _W_C_CreatePlayerResponse_default_instance_;
class W_C_SelectPlayerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<W_C_SelectPlayerResponse>
      _instance;
} _W_C_SelectPlayerResponse_default_instance_;
class A_C_RegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<A_C_RegisterResponse>
      _instance;
} _A_C_RegisterResponse_default_instance_;
class A_C_LoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<A_C_LoginRequest>
      _instance;
} _A_C_LoginRequest_default_instance_;
}  // namespace message
namespace protobuf_message_2eproto {
void InitDefaultsIpacketImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::message::_Ipacket_default_instance_;
    new (ptr) ::message::Ipacket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::Ipacket::InitAsDefaultInstance();
}

void InitDefaultsIpacket() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIpacketImpl);
}

void InitDefaultsPlayerDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::message::_PlayerData_default_instance_;
    new (ptr) ::message::PlayerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::PlayerData::InitAsDefaultInstance();
}

void InitDefaultsPlayerData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerDataImpl);
}

void InitDefaultsW_C_CreatePlayerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_W_C_CreatePlayerResponse_default_instance_;
    new (ptr) ::message::W_C_CreatePlayerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::W_C_CreatePlayerResponse::InitAsDefaultInstance();
}

void InitDefaultsW_C_CreatePlayerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsW_C_CreatePlayerResponseImpl);
}

void InitDefaultsW_C_SelectPlayerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  protobuf_message_2eproto::InitDefaultsPlayerData();
  {
    void* ptr = &::message::_W_C_SelectPlayerResponse_default_instance_;
    new (ptr) ::message::W_C_SelectPlayerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::W_C_SelectPlayerResponse::InitAsDefaultInstance();
}

void InitDefaultsW_C_SelectPlayerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsW_C_SelectPlayerResponseImpl);
}

void InitDefaultsA_C_RegisterResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_A_C_RegisterResponse_default_instance_;
    new (ptr) ::message::A_C_RegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::A_C_RegisterResponse::InitAsDefaultInstance();
}

void InitDefaultsA_C_RegisterResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsA_C_RegisterResponseImpl);
}

void InitDefaultsA_C_LoginRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_message_2eproto::InitDefaultsIpacket();
  {
    void* ptr = &::message::_A_C_LoginRequest_default_instance_;
    new (ptr) ::message::A_C_LoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::A_C_LoginRequest::InitAsDefaultInstance();
}

void InitDefaultsA_C_LoginRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsA_C_LoginRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::Ipacket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::Ipacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::Ipacket, stx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::Ipacket, destservertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::Ipacket, ckx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::Ipacket, id_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::PlayerData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::PlayerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::PlayerData, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::PlayerData, playername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::PlayerData, playergold_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_CreatePlayerResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_CreatePlayerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_CreatePlayerResponse, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_CreatePlayerResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_CreatePlayerResponse, playerid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_SelectPlayerResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_SelectPlayerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_SelectPlayerResponse, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_SelectPlayerResponse, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::W_C_SelectPlayerResponse, playerdata_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_RegisterResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_RegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_RegisterResponse, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_RegisterResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_RegisterResponse, socketid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_LoginRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_LoginRequest, packethead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_LoginRequest, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_LoginRequest, socketid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::message::A_C_LoginRequest, accountname_),
  1,
  2,
  3,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::message::Ipacket)},
  { 13, 21, sizeof(::message::PlayerData)},
  { 24, 32, sizeof(::message::W_C_CreatePlayerResponse)},
  { 35, 43, sizeof(::message::W_C_SelectPlayerResponse)},
  { 46, 54, sizeof(::message::A_C_RegisterResponse)},
  { 57, 66, sizeof(::message::A_C_LoginRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_Ipacket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_PlayerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_W_C_CreatePlayerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_W_C_SelectPlayerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_A_C_RegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::message::_A_C_LoginRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmessage.proto\022\007message\"P\n\007Ipacket\022\017\n\003S"
      "tx\030\001 \002(\005:\00239\022\026\n\016DestServerType\030\002 \002(\005\022\020\n\003"
      "Ckx\030\003 \002(\005:\003114\022\n\n\002Id\030\004 \002(\005\"F\n\nPlayerData"
      "\022\020\n\010PlayerID\030\001 \002(\005\022\022\n\nPlayerName\030\002 \002(\t\022\022"
      "\n\nPlayerGold\030\003 \002(\005\"a\n\030W_C_CreatePlayerRe"
      "sponse\022$\n\nPacketHead\030\001 \002(\0132\020.message.Ipa"
      "cket\022\r\n\005Error\030\002 \002(\005\022\020\n\010PlayerId\030\003 \002(\005\"|\n"
      "\030W_C_SelectPlayerResponse\022$\n\nPacketHead\030"
      "\001 \002(\0132\020.message.Ipacket\022\021\n\tAccountId\030\002 \002"
      "(\005\022\'\n\nPlayerData\030\003 \003(\0132\023.message.PlayerD"
      "ata\"]\n\024A_C_RegisterResponse\022$\n\nPacketHea"
      "d\030\001 \002(\0132\020.message.Ipacket\022\r\n\005Error\030\002 \002(\005"
      "\022\020\n\010SocketId\030\003 \002(\005\"n\n\020A_C_LoginRequest\022$"
      "\n\nPacketHead\030\001 \002(\0132\020.message.Ipacket\022\r\n\005"
      "Error\030\002 \002(\005\022\020\n\010SocketId\030\003 \002(\005\022\023\n\013Account"
      "Name\030\004 \002(\t*f\n\007SERVICE\022\010\n\004NONE\020\000\022\n\n\006CLIEN"
      "T\020\001\022\016\n\nGATESERVER\020\002\022\021\n\rACCOUNTSERVER\020\003\022\017"
      "\n\013WORLDSERVER\020\004\022\021\n\rMONITORSERVER\020\005*V\n\004CH"
      "AT\022\022\n\016MSG_TYPE_WORLD\020\000\022\024\n\020MSG_TYPE_PRIVA"
      "TE\020\001\022\020\n\014MSG_TYPE_ORG\020\002\022\022\n\016MSG_TYPE_COUNT"
      "\020\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 802);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_2eproto
namespace message {
const ::google::protobuf::EnumDescriptor* SERVICE_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[0];
}
bool SERVICE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CHAT_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[1];
}
bool CHAT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Ipacket::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ipacket::kStxFieldNumber;
const int Ipacket::kDestServerTypeFieldNumber;
const int Ipacket::kCkxFieldNumber;
const int Ipacket::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ipacket::Ipacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_2eproto::InitDefaultsIpacket();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.Ipacket)
}
Ipacket::Ipacket(const Ipacket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&destservertype_, &from.destservertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&ckx_) -
    reinterpret_cast<char*>(&destservertype_)) + sizeof(ckx_));
  // @@protoc_insertion_point(copy_constructor:message.Ipacket)
}

void Ipacket::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&destservertype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&destservertype_)) + sizeof(id_));
  stx_ = 39;
  ckx_ = 114;
}

Ipacket::~Ipacket() {
  // @@protoc_insertion_point(destructor:message.Ipacket)
  SharedDtor();
}

void Ipacket::SharedDtor() {
}

void Ipacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ipacket::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ipacket& Ipacket::default_instance() {
  ::protobuf_message_2eproto::InitDefaultsIpacket();
  return *internal_default_instance();
}

Ipacket* Ipacket::New(::google::protobuf::Arena* arena) const {
  Ipacket* n = new Ipacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Ipacket::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Ipacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&destservertype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&destservertype_)) + sizeof(id_));
    stx_ = 39;
    ckx_ = 114;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ipacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.Ipacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 Stx = 1 [default = 39];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_stx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 DestServerType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_destservertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &destservertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Ckx = 3 [default = 114];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_ckx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ckx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.Ipacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.Ipacket)
  return false;
#undef DO_
}

void Ipacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.Ipacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 Stx = 1 [default = 39];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stx(), output);
  }

  // required int32 DestServerType = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->destservertype(), output);
  }

  // required int32 Ckx = 3 [default = 114];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ckx(), output);
  }

  // required int32 Id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.Ipacket)
}

::google::protobuf::uint8* Ipacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.Ipacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 Stx = 1 [default = 39];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stx(), target);
  }

  // required int32 DestServerType = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->destservertype(), target);
  }

  // required int32 Ckx = 3 [default = 114];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ckx(), target);
  }

  // required int32 Id = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Ipacket)
  return target;
}

size_t Ipacket::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:message.Ipacket)
  size_t total_size = 0;

  if (has_destservertype()) {
    // required int32 DestServerType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->destservertype());
  }

  if (has_id()) {
    // required int32 Id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_stx()) {
    // required int32 Stx = 1 [default = 39];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stx());
  }

  if (has_ckx()) {
    // required int32 Ckx = 3 [default = 114];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ckx());
  }

  return total_size;
}
size_t Ipacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Ipacket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 DestServerType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->destservertype());

    // required int32 Id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 Stx = 1 [default = 39];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stx());

    // required int32 Ckx = 3 [default = 114];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ckx());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ipacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.Ipacket)
  GOOGLE_DCHECK_NE(&from, this);
  const Ipacket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ipacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.Ipacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.Ipacket)
    MergeFrom(*source);
  }
}

void Ipacket::MergeFrom(const Ipacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.Ipacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      destservertype_ = from.destservertype_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      stx_ = from.stx_;
    }
    if (cached_has_bits & 0x00000008u) {
      ckx_ = from.ckx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ipacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.Ipacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ipacket::CopyFrom(const Ipacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Ipacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ipacket::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void Ipacket::Swap(Ipacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ipacket::InternalSwap(Ipacket* other) {
  using std::swap;
  swap(destservertype_, other->destservertype_);
  swap(id_, other->id_);
  swap(stx_, other->stx_);
  swap(ckx_, other->ckx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ipacket::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerData::kPlayerIDFieldNumber;
const int PlayerData::kPlayerNameFieldNumber;
const int PlayerData::kPlayerGoldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerData::PlayerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_2eproto::InitDefaultsPlayerData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.PlayerData)
}
PlayerData::PlayerData(const PlayerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playername()) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playergold_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(playergold_));
  // @@protoc_insertion_point(copy_constructor:message.PlayerData)
}

void PlayerData::SharedCtor() {
  _cached_size_ = 0;
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playergold_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(playergold_));
}

PlayerData::~PlayerData() {
  // @@protoc_insertion_point(destructor:message.PlayerData)
  SharedDtor();
}

void PlayerData::SharedDtor() {
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerData::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerData& PlayerData::default_instance() {
  ::protobuf_message_2eproto::InitDefaultsPlayerData();
  return *internal_default_instance();
}

PlayerData* PlayerData::New(::google::protobuf::Arena* arena) const {
  PlayerData* n = new PlayerData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerData::Clear() {
// @@protoc_insertion_point(message_clear_start:message.PlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!playername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*playername_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&playerid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&playergold_) -
        reinterpret_cast<char*>(&playerid_)) + sizeof(playergold_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.PlayerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string PlayerName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playername().data(), static_cast<int>(this->playername().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.PlayerData.PlayerName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 PlayerGold = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_playergold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playergold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.PlayerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.PlayerData)
  return false;
#undef DO_
}

void PlayerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.PlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 PlayerID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // required string PlayerName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.PlayerData.PlayerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->playername(), output);
  }

  // required int32 PlayerGold = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->playergold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.PlayerData)
}

::google::protobuf::uint8* PlayerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.PlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 PlayerID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // required string PlayerName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.PlayerData.PlayerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->playername(), target);
  }

  // required int32 PlayerGold = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->playergold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.PlayerData)
  return target;
}

size_t PlayerData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:message.PlayerData)
  size_t total_size = 0;

  if (has_playername()) {
    // required string PlayerName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  if (has_playerid()) {
    // required int32 PlayerID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  if (has_playergold()) {
    // required int32 PlayerGold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playergold());
  }

  return total_size;
}
size_t PlayerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.PlayerData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string PlayerName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());

    // required int32 PlayerID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());

    // required int32 PlayerGold = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playergold());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.PlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.PlayerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.PlayerData)
    MergeFrom(*source);
  }
}

void PlayerData::MergeFrom(const PlayerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.PlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_playername();
      playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
    }
    if (cached_has_bits & 0x00000002u) {
      playerid_ = from.playerid_;
    }
    if (cached_has_bits & 0x00000004u) {
      playergold_ = from.playergold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.PlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerData::CopyFrom(const PlayerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.PlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PlayerData::Swap(PlayerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerData::InternalSwap(PlayerData* other) {
  using std::swap;
  playername_.Swap(&other->playername_);
  swap(playerid_, other->playerid_);
  swap(playergold_, other->playergold_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerData::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void W_C_CreatePlayerResponse::InitAsDefaultInstance() {
  ::message::_W_C_CreatePlayerResponse_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W_C_CreatePlayerResponse::kPacketHeadFieldNumber;
const int W_C_CreatePlayerResponse::kErrorFieldNumber;
const int W_C_CreatePlayerResponse::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W_C_CreatePlayerResponse::W_C_CreatePlayerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_2eproto::InitDefaultsW_C_CreatePlayerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.W_C_CreatePlayerResponse)
}
W_C_CreatePlayerResponse::W_C_CreatePlayerResponse(const W_C_CreatePlayerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&error_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:message.W_C_CreatePlayerResponse)
}

void W_C_CreatePlayerResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(playerid_));
}

W_C_CreatePlayerResponse::~W_C_CreatePlayerResponse() {
  // @@protoc_insertion_point(destructor:message.W_C_CreatePlayerResponse)
  SharedDtor();
}

void W_C_CreatePlayerResponse::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
}

void W_C_CreatePlayerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* W_C_CreatePlayerResponse::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const W_C_CreatePlayerResponse& W_C_CreatePlayerResponse::default_instance() {
  ::protobuf_message_2eproto::InitDefaultsW_C_CreatePlayerResponse();
  return *internal_default_instance();
}

W_C_CreatePlayerResponse* W_C_CreatePlayerResponse::New(::google::protobuf::Arena* arena) const {
  W_C_CreatePlayerResponse* n = new W_C_CreatePlayerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void W_C_CreatePlayerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:message.W_C_CreatePlayerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(packethead_ != NULL);
    packethead_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&error_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&playerid_) -
        reinterpret_cast<char*>(&error_)) + sizeof(playerid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool W_C_CreatePlayerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.W_C_CreatePlayerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 PlayerId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.W_C_CreatePlayerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.W_C_CreatePlayerResponse)
  return false;
#undef DO_
}

void W_C_CreatePlayerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.W_C_CreatePlayerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message.Ipacket PacketHead = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // required int32 Error = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error(), output);
  }

  // required int32 PlayerId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->playerid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.W_C_CreatePlayerResponse)
}

::google::protobuf::uint8* W_C_CreatePlayerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.W_C_CreatePlayerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message.Ipacket PacketHead = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // required int32 Error = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error(), target);
  }

  // required int32 PlayerId = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->playerid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.W_C_CreatePlayerResponse)
  return target;
}

size_t W_C_CreatePlayerResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:message.W_C_CreatePlayerResponse)
  size_t total_size = 0;

  if (has_packethead()) {
    // required .message.Ipacket PacketHead = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  if (has_error()) {
    // required int32 Error = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  if (has_playerid()) {
    // required int32 PlayerId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  return total_size;
}
size_t W_C_CreatePlayerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.W_C_CreatePlayerResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .message.Ipacket PacketHead = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);

    // required int32 Error = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());

    // required int32 PlayerId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void W_C_CreatePlayerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.W_C_CreatePlayerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const W_C_CreatePlayerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const W_C_CreatePlayerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.W_C_CreatePlayerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.W_C_CreatePlayerResponse)
    MergeFrom(*source);
  }
}

void W_C_CreatePlayerResponse::MergeFrom(const W_C_CreatePlayerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.W_C_CreatePlayerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
    }
    if (cached_has_bits & 0x00000002u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000004u) {
      playerid_ = from.playerid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void W_C_CreatePlayerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.W_C_CreatePlayerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W_C_CreatePlayerResponse::CopyFrom(const W_C_CreatePlayerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.W_C_CreatePlayerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W_C_CreatePlayerResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_packethead()) {
    if (!this->packethead_->IsInitialized()) return false;
  }
  return true;
}

void W_C_CreatePlayerResponse::Swap(W_C_CreatePlayerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W_C_CreatePlayerResponse::InternalSwap(W_C_CreatePlayerResponse* other) {
  using std::swap;
  swap(packethead_, other->packethead_);
  swap(error_, other->error_);
  swap(playerid_, other->playerid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata W_C_CreatePlayerResponse::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void W_C_SelectPlayerResponse::InitAsDefaultInstance() {
  ::message::_W_C_SelectPlayerResponse_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int W_C_SelectPlayerResponse::kPacketHeadFieldNumber;
const int W_C_SelectPlayerResponse::kAccountIdFieldNumber;
const int W_C_SelectPlayerResponse::kPlayerDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

W_C_SelectPlayerResponse::W_C_SelectPlayerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_2eproto::InitDefaultsW_C_SelectPlayerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.W_C_SelectPlayerResponse)
}
W_C_SelectPlayerResponse::W_C_SelectPlayerResponse(const W_C_SelectPlayerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      playerdata_(from.playerdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:message.W_C_SelectPlayerResponse)
}

void W_C_SelectPlayerResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(accountid_));
}

W_C_SelectPlayerResponse::~W_C_SelectPlayerResponse() {
  // @@protoc_insertion_point(destructor:message.W_C_SelectPlayerResponse)
  SharedDtor();
}

void W_C_SelectPlayerResponse::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
}

void W_C_SelectPlayerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* W_C_SelectPlayerResponse::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const W_C_SelectPlayerResponse& W_C_SelectPlayerResponse::default_instance() {
  ::protobuf_message_2eproto::InitDefaultsW_C_SelectPlayerResponse();
  return *internal_default_instance();
}

W_C_SelectPlayerResponse* W_C_SelectPlayerResponse::New(::google::protobuf::Arena* arena) const {
  W_C_SelectPlayerResponse* n = new W_C_SelectPlayerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void W_C_SelectPlayerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:message.W_C_SelectPlayerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerdata_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(packethead_ != NULL);
    packethead_->Clear();
  }
  accountid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool W_C_SelectPlayerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.W_C_SelectPlayerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 AccountId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .message.PlayerData PlayerData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.W_C_SelectPlayerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.W_C_SelectPlayerResponse)
  return false;
#undef DO_
}

void W_C_SelectPlayerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.W_C_SelectPlayerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message.Ipacket PacketHead = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // required int32 AccountId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->accountid(), output);
  }

  // repeated .message.PlayerData PlayerData = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->playerdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->playerdata(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.W_C_SelectPlayerResponse)
}

::google::protobuf::uint8* W_C_SelectPlayerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.W_C_SelectPlayerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message.Ipacket PacketHead = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // required int32 AccountId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->accountid(), target);
  }

  // repeated .message.PlayerData PlayerData = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->playerdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->playerdata(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.W_C_SelectPlayerResponse)
  return target;
}

size_t W_C_SelectPlayerResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:message.W_C_SelectPlayerResponse)
  size_t total_size = 0;

  if (has_packethead()) {
    // required .message.Ipacket PacketHead = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  if (has_accountid()) {
    // required int32 AccountId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->accountid());
  }

  return total_size;
}
size_t W_C_SelectPlayerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.W_C_SelectPlayerResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .message.Ipacket PacketHead = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);

    // required int32 AccountId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->accountid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .message.PlayerData PlayerData = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->playerdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->playerdata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void W_C_SelectPlayerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.W_C_SelectPlayerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const W_C_SelectPlayerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const W_C_SelectPlayerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.W_C_SelectPlayerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.W_C_SelectPlayerResponse)
    MergeFrom(*source);
  }
}

void W_C_SelectPlayerResponse::MergeFrom(const W_C_SelectPlayerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.W_C_SelectPlayerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerdata_.MergeFrom(from.playerdata_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
    }
    if (cached_has_bits & 0x00000002u) {
      accountid_ = from.accountid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void W_C_SelectPlayerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.W_C_SelectPlayerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void W_C_SelectPlayerResponse::CopyFrom(const W_C_SelectPlayerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.W_C_SelectPlayerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool W_C_SelectPlayerResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->playerdata())) return false;
  if (has_packethead()) {
    if (!this->packethead_->IsInitialized()) return false;
  }
  return true;
}

void W_C_SelectPlayerResponse::Swap(W_C_SelectPlayerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void W_C_SelectPlayerResponse::InternalSwap(W_C_SelectPlayerResponse* other) {
  using std::swap;
  playerdata_.InternalSwap(&other->playerdata_);
  swap(packethead_, other->packethead_);
  swap(accountid_, other->accountid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata W_C_SelectPlayerResponse::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void A_C_RegisterResponse::InitAsDefaultInstance() {
  ::message::_A_C_RegisterResponse_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int A_C_RegisterResponse::kPacketHeadFieldNumber;
const int A_C_RegisterResponse::kErrorFieldNumber;
const int A_C_RegisterResponse::kSocketIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

A_C_RegisterResponse::A_C_RegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_2eproto::InitDefaultsA_C_RegisterResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.A_C_RegisterResponse)
}
A_C_RegisterResponse::A_C_RegisterResponse(const A_C_RegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&socketid_) -
    reinterpret_cast<char*>(&error_)) + sizeof(socketid_));
  // @@protoc_insertion_point(copy_constructor:message.A_C_RegisterResponse)
}

void A_C_RegisterResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&socketid_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(socketid_));
}

A_C_RegisterResponse::~A_C_RegisterResponse() {
  // @@protoc_insertion_point(destructor:message.A_C_RegisterResponse)
  SharedDtor();
}

void A_C_RegisterResponse::SharedDtor() {
  if (this != internal_default_instance()) delete packethead_;
}

void A_C_RegisterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* A_C_RegisterResponse::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const A_C_RegisterResponse& A_C_RegisterResponse::default_instance() {
  ::protobuf_message_2eproto::InitDefaultsA_C_RegisterResponse();
  return *internal_default_instance();
}

A_C_RegisterResponse* A_C_RegisterResponse::New(::google::protobuf::Arena* arena) const {
  A_C_RegisterResponse* n = new A_C_RegisterResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void A_C_RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:message.A_C_RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(packethead_ != NULL);
    packethead_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&error_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&socketid_) -
        reinterpret_cast<char*>(&error_)) + sizeof(socketid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool A_C_RegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.A_C_RegisterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 SocketId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_socketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.A_C_RegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.A_C_RegisterResponse)
  return false;
#undef DO_
}

void A_C_RegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.A_C_RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message.Ipacket PacketHead = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // required int32 Error = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error(), output);
  }

  // required int32 SocketId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->socketid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.A_C_RegisterResponse)
}

::google::protobuf::uint8* A_C_RegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.A_C_RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message.Ipacket PacketHead = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // required int32 Error = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error(), target);
  }

  // required int32 SocketId = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->socketid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.A_C_RegisterResponse)
  return target;
}

size_t A_C_RegisterResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:message.A_C_RegisterResponse)
  size_t total_size = 0;

  if (has_packethead()) {
    // required .message.Ipacket PacketHead = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  if (has_error()) {
    // required int32 Error = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  if (has_socketid()) {
    // required int32 SocketId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socketid());
  }

  return total_size;
}
size_t A_C_RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.A_C_RegisterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .message.Ipacket PacketHead = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);

    // required int32 Error = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());

    // required int32 SocketId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socketid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void A_C_RegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.A_C_RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const A_C_RegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const A_C_RegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.A_C_RegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.A_C_RegisterResponse)
    MergeFrom(*source);
  }
}

void A_C_RegisterResponse::MergeFrom(const A_C_RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.A_C_RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
    }
    if (cached_has_bits & 0x00000002u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000004u) {
      socketid_ = from.socketid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void A_C_RegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.A_C_RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void A_C_RegisterResponse::CopyFrom(const A_C_RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.A_C_RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool A_C_RegisterResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_packethead()) {
    if (!this->packethead_->IsInitialized()) return false;
  }
  return true;
}

void A_C_RegisterResponse::Swap(A_C_RegisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void A_C_RegisterResponse::InternalSwap(A_C_RegisterResponse* other) {
  using std::swap;
  swap(packethead_, other->packethead_);
  swap(error_, other->error_);
  swap(socketid_, other->socketid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata A_C_RegisterResponse::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void A_C_LoginRequest::InitAsDefaultInstance() {
  ::message::_A_C_LoginRequest_default_instance_._instance.get_mutable()->packethead_ = const_cast< ::message::Ipacket*>(
      ::message::Ipacket::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int A_C_LoginRequest::kPacketHeadFieldNumber;
const int A_C_LoginRequest::kErrorFieldNumber;
const int A_C_LoginRequest::kSocketIdFieldNumber;
const int A_C_LoginRequest::kAccountNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

A_C_LoginRequest::A_C_LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_2eproto::InitDefaultsA_C_LoginRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.A_C_LoginRequest)
}
A_C_LoginRequest::A_C_LoginRequest(const A_C_LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_accountname()) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.has_packethead()) {
    packethead_ = new ::message::Ipacket(*from.packethead_);
  } else {
    packethead_ = NULL;
  }
  ::memcpy(&error_, &from.error_,
    static_cast<size_t>(reinterpret_cast<char*>(&socketid_) -
    reinterpret_cast<char*>(&error_)) + sizeof(socketid_));
  // @@protoc_insertion_point(copy_constructor:message.A_C_LoginRequest)
}

void A_C_LoginRequest::SharedCtor() {
  _cached_size_ = 0;
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&packethead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&socketid_) -
      reinterpret_cast<char*>(&packethead_)) + sizeof(socketid_));
}

A_C_LoginRequest::~A_C_LoginRequest() {
  // @@protoc_insertion_point(destructor:message.A_C_LoginRequest)
  SharedDtor();
}

void A_C_LoginRequest::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete packethead_;
}

void A_C_LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* A_C_LoginRequest::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const A_C_LoginRequest& A_C_LoginRequest::default_instance() {
  ::protobuf_message_2eproto::InitDefaultsA_C_LoginRequest();
  return *internal_default_instance();
}

A_C_LoginRequest* A_C_LoginRequest::New(::google::protobuf::Arena* arena) const {
  A_C_LoginRequest* n = new A_C_LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void A_C_LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:message.A_C_LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!accountname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*accountname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(packethead_ != NULL);
      packethead_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&error_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&socketid_) -
        reinterpret_cast<char*>(&error_)) + sizeof(socketid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool A_C_LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:message.A_C_LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .message.Ipacket PacketHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packethead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 SocketId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_socketid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socketid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string AccountName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->accountname().data(), static_cast<int>(this->accountname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message.A_C_LoginRequest.AccountName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:message.A_C_LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:message.A_C_LoginRequest)
  return false;
#undef DO_
}

void A_C_LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:message.A_C_LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message.Ipacket PacketHead = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->packethead_, output);
  }

  // required int32 Error = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->error(), output);
  }

  // required int32 SocketId = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->socketid(), output);
  }

  // required string AccountName = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.A_C_LoginRequest.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->accountname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:message.A_C_LoginRequest)
}

::google::protobuf::uint8* A_C_LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:message.A_C_LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .message.Ipacket PacketHead = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->packethead_, deterministic, target);
  }

  // required int32 Error = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->error(), target);
  }

  // required int32 SocketId = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->socketid(), target);
  }

  // required string AccountName = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message.A_C_LoginRequest.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->accountname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.A_C_LoginRequest)
  return target;
}

size_t A_C_LoginRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:message.A_C_LoginRequest)
  size_t total_size = 0;

  if (has_accountname()) {
    // required string AccountName = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  if (has_packethead()) {
    // required .message.Ipacket PacketHead = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);
  }

  if (has_error()) {
    // required int32 Error = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());
  }

  if (has_socketid()) {
    // required int32 SocketId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socketid());
  }

  return total_size;
}
size_t A_C_LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.A_C_LoginRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string AccountName = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());

    // required .message.Ipacket PacketHead = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->packethead_);

    // required int32 Error = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error());

    // required int32 SocketId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socketid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void A_C_LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.A_C_LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const A_C_LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const A_C_LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.A_C_LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.A_C_LoginRequest)
    MergeFrom(*source);
  }
}

void A_C_LoginRequest::MergeFrom(const A_C_LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.A_C_LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_accountname();
      accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_packethead()->::message::Ipacket::MergeFrom(from.packethead());
    }
    if (cached_has_bits & 0x00000004u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00000008u) {
      socketid_ = from.socketid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void A_C_LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.A_C_LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void A_C_LoginRequest::CopyFrom(const A_C_LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.A_C_LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool A_C_LoginRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_packethead()) {
    if (!this->packethead_->IsInitialized()) return false;
  }
  return true;
}

void A_C_LoginRequest::Swap(A_C_LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void A_C_LoginRequest::InternalSwap(A_C_LoginRequest* other) {
  using std::swap;
  accountname_.Swap(&other->accountname_);
  swap(packethead_, other->packethead_);
  swap(error_, other->error_);
  swap(socketid_, other->socketid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata A_C_LoginRequest::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace message

// @@protoc_insertion_point(global_scope)
