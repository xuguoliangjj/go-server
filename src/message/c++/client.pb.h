// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.proto

#ifndef PROTOBUF_client_2eproto__INCLUDED
#define PROTOBUF_client_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "message.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_client_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsC_A_LoginRequestImpl();
void InitDefaultsC_A_LoginRequest();
void InitDefaultsC_A_LoginRequest1Impl();
void InitDefaultsC_A_LoginRequest1();
void InitDefaultsC_A_RegisterRequestImpl();
void InitDefaultsC_A_RegisterRequest();
void InitDefaultsC_W_CreatePlayerRequestImpl();
void InitDefaultsC_W_CreatePlayerRequest();
void InitDefaultsC_W_Game_LoginRequsetImpl();
void InitDefaultsC_W_Game_LoginRequset();
void InitDefaultsC_G_LogoutResponseImpl();
void InitDefaultsC_G_LogoutResponse();
void InitDefaultsC_W_ChatMessageImpl();
void InitDefaultsC_W_ChatMessage();
inline void InitDefaults() {
  InitDefaultsC_A_LoginRequest();
  InitDefaultsC_A_LoginRequest1();
  InitDefaultsC_A_RegisterRequest();
  InitDefaultsC_W_CreatePlayerRequest();
  InitDefaultsC_W_Game_LoginRequset();
  InitDefaultsC_G_LogoutResponse();
  InitDefaultsC_W_ChatMessage();
}
}  // namespace protobuf_client_2eproto
namespace message {
class C_A_LoginRequest;
class C_A_LoginRequestDefaultTypeInternal;
extern C_A_LoginRequestDefaultTypeInternal _C_A_LoginRequest_default_instance_;
class C_A_LoginRequest1;
class C_A_LoginRequest1DefaultTypeInternal;
extern C_A_LoginRequest1DefaultTypeInternal _C_A_LoginRequest1_default_instance_;
class C_A_RegisterRequest;
class C_A_RegisterRequestDefaultTypeInternal;
extern C_A_RegisterRequestDefaultTypeInternal _C_A_RegisterRequest_default_instance_;
class C_G_LogoutResponse;
class C_G_LogoutResponseDefaultTypeInternal;
extern C_G_LogoutResponseDefaultTypeInternal _C_G_LogoutResponse_default_instance_;
class C_W_ChatMessage;
class C_W_ChatMessageDefaultTypeInternal;
extern C_W_ChatMessageDefaultTypeInternal _C_W_ChatMessage_default_instance_;
class C_W_CreatePlayerRequest;
class C_W_CreatePlayerRequestDefaultTypeInternal;
extern C_W_CreatePlayerRequestDefaultTypeInternal _C_W_CreatePlayerRequest_default_instance_;
class C_W_Game_LoginRequset;
class C_W_Game_LoginRequsetDefaultTypeInternal;
extern C_W_Game_LoginRequsetDefaultTypeInternal _C_W_Game_LoginRequset_default_instance_;
}  // namespace message
namespace message {

// ===================================================================

class C_A_LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_A_LoginRequest) */ {
 public:
  C_A_LoginRequest();
  virtual ~C_A_LoginRequest();

  C_A_LoginRequest(const C_A_LoginRequest& from);

  inline C_A_LoginRequest& operator=(const C_A_LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_A_LoginRequest(C_A_LoginRequest&& from) noexcept
    : C_A_LoginRequest() {
    *this = ::std::move(from);
  }

  inline C_A_LoginRequest& operator=(C_A_LoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_A_LoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_A_LoginRequest* internal_default_instance() {
    return reinterpret_cast<const C_A_LoginRequest*>(
               &_C_A_LoginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(C_A_LoginRequest* other);
  friend void swap(C_A_LoginRequest& a, C_A_LoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_A_LoginRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  C_A_LoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_A_LoginRequest& from);
  void MergeFrom(const C_A_LoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_A_LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string AccountName = 2;
  bool has_accountname() const;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 2;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // required string BuildNo = 3;
  bool has_buildno() const;
  void clear_buildno();
  static const int kBuildNoFieldNumber = 3;
  const ::std::string& buildno() const;
  void set_buildno(const ::std::string& value);
  #if LANG_CXX11
  void set_buildno(::std::string&& value);
  #endif
  void set_buildno(const char* value);
  void set_buildno(const char* value, size_t size);
  ::std::string* mutable_buildno();
  ::std::string* release_buildno();
  void set_allocated_buildno(::std::string* buildno);

  // required .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // required int32 SocketId = 4;
  bool has_socketid() const;
  void clear_socketid();
  static const int kSocketIdFieldNumber = 4;
  ::google::protobuf::int32 socketid() const;
  void set_socketid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_A_LoginRequest)
 private:
  void set_has_packethead();
  void clear_has_packethead();
  void set_has_accountname();
  void clear_has_accountname();
  void set_has_buildno();
  void clear_has_buildno();
  void set_has_socketid();
  void clear_has_socketid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::google::protobuf::internal::ArenaStringPtr buildno_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 socketid_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_A_LoginRequestImpl();
};
// -------------------------------------------------------------------

class C_A_LoginRequest1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_A_LoginRequest1) */ {
 public:
  C_A_LoginRequest1();
  virtual ~C_A_LoginRequest1();

  C_A_LoginRequest1(const C_A_LoginRequest1& from);

  inline C_A_LoginRequest1& operator=(const C_A_LoginRequest1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_A_LoginRequest1(C_A_LoginRequest1&& from) noexcept
    : C_A_LoginRequest1() {
    *this = ::std::move(from);
  }

  inline C_A_LoginRequest1& operator=(C_A_LoginRequest1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_A_LoginRequest1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_A_LoginRequest1* internal_default_instance() {
    return reinterpret_cast<const C_A_LoginRequest1*>(
               &_C_A_LoginRequest1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(C_A_LoginRequest1* other);
  friend void swap(C_A_LoginRequest1& a, C_A_LoginRequest1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_A_LoginRequest1* New() const PROTOBUF_FINAL { return New(NULL); }

  C_A_LoginRequest1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_A_LoginRequest1& from);
  void MergeFrom(const C_A_LoginRequest1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_A_LoginRequest1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.C_A_LoginRequest Login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::message::C_A_LoginRequest& login() const;
  ::message::C_A_LoginRequest* release_login();
  ::message::C_A_LoginRequest* mutable_login();
  void set_allocated_login(::message::C_A_LoginRequest* login);

  // @@protoc_insertion_point(class_scope:message.C_A_LoginRequest1)
 private:
  void set_has_login();
  void clear_has_login();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::message::C_A_LoginRequest* login_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_A_LoginRequest1Impl();
};
// -------------------------------------------------------------------

class C_A_RegisterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_A_RegisterRequest) */ {
 public:
  C_A_RegisterRequest();
  virtual ~C_A_RegisterRequest();

  C_A_RegisterRequest(const C_A_RegisterRequest& from);

  inline C_A_RegisterRequest& operator=(const C_A_RegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_A_RegisterRequest(C_A_RegisterRequest&& from) noexcept
    : C_A_RegisterRequest() {
    *this = ::std::move(from);
  }

  inline C_A_RegisterRequest& operator=(C_A_RegisterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_A_RegisterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_A_RegisterRequest* internal_default_instance() {
    return reinterpret_cast<const C_A_RegisterRequest*>(
               &_C_A_RegisterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(C_A_RegisterRequest* other);
  friend void swap(C_A_RegisterRequest& a, C_A_RegisterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_A_RegisterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  C_A_RegisterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_A_RegisterRequest& from);
  void MergeFrom(const C_A_RegisterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_A_RegisterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string AccountName = 2;
  bool has_accountname() const;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 2;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // required .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // required int32 SocketId = 3;
  bool has_socketid() const;
  void clear_socketid();
  static const int kSocketIdFieldNumber = 3;
  ::google::protobuf::int32 socketid() const;
  void set_socketid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_A_RegisterRequest)
 private:
  void set_has_packethead();
  void clear_has_packethead();
  void set_has_accountname();
  void clear_has_accountname();
  void set_has_socketid();
  void clear_has_socketid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 socketid_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_A_RegisterRequestImpl();
};
// -------------------------------------------------------------------

class C_W_CreatePlayerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_CreatePlayerRequest) */ {
 public:
  C_W_CreatePlayerRequest();
  virtual ~C_W_CreatePlayerRequest();

  C_W_CreatePlayerRequest(const C_W_CreatePlayerRequest& from);

  inline C_W_CreatePlayerRequest& operator=(const C_W_CreatePlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_CreatePlayerRequest(C_W_CreatePlayerRequest&& from) noexcept
    : C_W_CreatePlayerRequest() {
    *this = ::std::move(from);
  }

  inline C_W_CreatePlayerRequest& operator=(C_W_CreatePlayerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_CreatePlayerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_CreatePlayerRequest* internal_default_instance() {
    return reinterpret_cast<const C_W_CreatePlayerRequest*>(
               &_C_W_CreatePlayerRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(C_W_CreatePlayerRequest* other);
  friend void swap(C_W_CreatePlayerRequest& a, C_W_CreatePlayerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_CreatePlayerRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_CreatePlayerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_CreatePlayerRequest& from);
  void MergeFrom(const C_W_CreatePlayerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_CreatePlayerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string PlayerName = 2;
  bool has_playername() const;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // required .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // required int32 Sex = 3;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 3;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_W_CreatePlayerRequest)
 private:
  void set_has_packethead();
  void clear_has_packethead();
  void set_has_playername();
  void clear_has_playername();
  void set_has_sex();
  void clear_has_sex();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 sex_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_W_CreatePlayerRequestImpl();
};
// -------------------------------------------------------------------

class C_W_Game_LoginRequset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_Game_LoginRequset) */ {
 public:
  C_W_Game_LoginRequset();
  virtual ~C_W_Game_LoginRequset();

  C_W_Game_LoginRequset(const C_W_Game_LoginRequset& from);

  inline C_W_Game_LoginRequset& operator=(const C_W_Game_LoginRequset& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_Game_LoginRequset(C_W_Game_LoginRequset&& from) noexcept
    : C_W_Game_LoginRequset() {
    *this = ::std::move(from);
  }

  inline C_W_Game_LoginRequset& operator=(C_W_Game_LoginRequset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_Game_LoginRequset& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_Game_LoginRequset* internal_default_instance() {
    return reinterpret_cast<const C_W_Game_LoginRequset*>(
               &_C_W_Game_LoginRequset_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(C_W_Game_LoginRequset* other);
  friend void swap(C_W_Game_LoginRequset& a, C_W_Game_LoginRequset& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_Game_LoginRequset* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_Game_LoginRequset* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_Game_LoginRequset& from);
  void MergeFrom(const C_W_Game_LoginRequset& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_Game_LoginRequset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // required int32 PlayerId = 2;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_W_Game_LoginRequset)
 private:
  void set_has_packethead();
  void clear_has_packethead();
  void set_has_playerid();
  void clear_has_playerid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 playerid_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_W_Game_LoginRequsetImpl();
};
// -------------------------------------------------------------------

class C_G_LogoutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_G_LogoutResponse) */ {
 public:
  C_G_LogoutResponse();
  virtual ~C_G_LogoutResponse();

  C_G_LogoutResponse(const C_G_LogoutResponse& from);

  inline C_G_LogoutResponse& operator=(const C_G_LogoutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_G_LogoutResponse(C_G_LogoutResponse&& from) noexcept
    : C_G_LogoutResponse() {
    *this = ::std::move(from);
  }

  inline C_G_LogoutResponse& operator=(C_G_LogoutResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_G_LogoutResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_G_LogoutResponse* internal_default_instance() {
    return reinterpret_cast<const C_G_LogoutResponse*>(
               &_C_G_LogoutResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(C_G_LogoutResponse* other);
  friend void swap(C_G_LogoutResponse& a, C_G_LogoutResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_G_LogoutResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  C_G_LogoutResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_G_LogoutResponse& from);
  void MergeFrom(const C_G_LogoutResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_G_LogoutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // @@protoc_insertion_point(class_scope:message.C_G_LogoutResponse)
 private:
  void set_has_packethead();
  void clear_has_packethead();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::message::Ipacket* packethead_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_G_LogoutResponseImpl();
};
// -------------------------------------------------------------------

class C_W_ChatMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.C_W_ChatMessage) */ {
 public:
  C_W_ChatMessage();
  virtual ~C_W_ChatMessage();

  C_W_ChatMessage(const C_W_ChatMessage& from);

  inline C_W_ChatMessage& operator=(const C_W_ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C_W_ChatMessage(C_W_ChatMessage&& from) noexcept
    : C_W_ChatMessage() {
    *this = ::std::move(from);
  }

  inline C_W_ChatMessage& operator=(C_W_ChatMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C_W_ChatMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C_W_ChatMessage* internal_default_instance() {
    return reinterpret_cast<const C_W_ChatMessage*>(
               &_C_W_ChatMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(C_W_ChatMessage* other);
  friend void swap(C_W_ChatMessage& a, C_W_ChatMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C_W_ChatMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  C_W_ChatMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C_W_ChatMessage& from);
  void MergeFrom(const C_W_ChatMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C_W_ChatMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Message = 5;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 5;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // required .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // required int32 Sender = 2;
  bool has_sender() const;
  void clear_sender();
  static const int kSenderFieldNumber = 2;
  ::google::protobuf::int32 sender() const;
  void set_sender(::google::protobuf::int32 value);

  // required int32 Recver = 3;
  bool has_recver() const;
  void clear_recver();
  static const int kRecverFieldNumber = 3;
  ::google::protobuf::int32 recver() const;
  void set_recver(::google::protobuf::int32 value);

  // required int32 MessageType = 4;
  bool has_messagetype() const;
  void clear_messagetype();
  static const int kMessageTypeFieldNumber = 4;
  ::google::protobuf::int32 messagetype() const;
  void set_messagetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.C_W_ChatMessage)
 private:
  void set_has_packethead();
  void clear_has_packethead();
  void set_has_sender();
  void clear_has_sender();
  void set_has_recver();
  void clear_has_recver();
  void set_has_messagetype();
  void clear_has_messagetype();
  void set_has_message();
  void clear_has_message();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 sender_;
  ::google::protobuf::int32 recver_;
  ::google::protobuf::int32 messagetype_;
  friend struct ::protobuf_client_2eproto::TableStruct;
  friend void ::protobuf_client_2eproto::InitDefaultsC_W_ChatMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// C_A_LoginRequest

// required .message.Ipacket PacketHead = 1;
inline bool C_A_LoginRequest::has_packethead() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C_A_LoginRequest::set_has_packethead() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C_A_LoginRequest::clear_has_packethead() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::message::Ipacket& C_A_LoginRequest::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_A_LoginRequest.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_A_LoginRequest::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_A_LoginRequest.PacketHead)
  clear_has_packethead();
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_A_LoginRequest::mutable_packethead() {
  set_has_packethead();
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_A_LoginRequest.PacketHead)
  return packethead_;
}
inline void C_A_LoginRequest::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    set_has_packethead();
  } else {
    clear_has_packethead();
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_A_LoginRequest.PacketHead)
}

// required string AccountName = 2;
inline bool C_A_LoginRequest::has_accountname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_A_LoginRequest::set_has_accountname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_A_LoginRequest::clear_has_accountname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_A_LoginRequest::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_accountname();
}
inline const ::std::string& C_A_LoginRequest::accountname() const {
  // @@protoc_insertion_point(field_get:message.C_A_LoginRequest.AccountName)
  return accountname_.GetNoArena();
}
inline void C_A_LoginRequest::set_accountname(const ::std::string& value) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C_A_LoginRequest.AccountName)
}
#if LANG_CXX11
inline void C_A_LoginRequest::set_accountname(::std::string&& value) {
  set_has_accountname();
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.C_A_LoginRequest.AccountName)
}
#endif
inline void C_A_LoginRequest::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C_A_LoginRequest.AccountName)
}
inline void C_A_LoginRequest::set_accountname(const char* value, size_t size) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C_A_LoginRequest.AccountName)
}
inline ::std::string* C_A_LoginRequest::mutable_accountname() {
  set_has_accountname();
  // @@protoc_insertion_point(field_mutable:message.C_A_LoginRequest.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_A_LoginRequest::release_accountname() {
  // @@protoc_insertion_point(field_release:message.C_A_LoginRequest.AccountName)
  clear_has_accountname();
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_A_LoginRequest::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    set_has_accountname();
  } else {
    clear_has_accountname();
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:message.C_A_LoginRequest.AccountName)
}

// required string BuildNo = 3;
inline bool C_A_LoginRequest::has_buildno() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C_A_LoginRequest::set_has_buildno() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C_A_LoginRequest::clear_has_buildno() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C_A_LoginRequest::clear_buildno() {
  buildno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buildno();
}
inline const ::std::string& C_A_LoginRequest::buildno() const {
  // @@protoc_insertion_point(field_get:message.C_A_LoginRequest.BuildNo)
  return buildno_.GetNoArena();
}
inline void C_A_LoginRequest::set_buildno(const ::std::string& value) {
  set_has_buildno();
  buildno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C_A_LoginRequest.BuildNo)
}
#if LANG_CXX11
inline void C_A_LoginRequest::set_buildno(::std::string&& value) {
  set_has_buildno();
  buildno_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.C_A_LoginRequest.BuildNo)
}
#endif
inline void C_A_LoginRequest::set_buildno(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_buildno();
  buildno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C_A_LoginRequest.BuildNo)
}
inline void C_A_LoginRequest::set_buildno(const char* value, size_t size) {
  set_has_buildno();
  buildno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C_A_LoginRequest.BuildNo)
}
inline ::std::string* C_A_LoginRequest::mutable_buildno() {
  set_has_buildno();
  // @@protoc_insertion_point(field_mutable:message.C_A_LoginRequest.BuildNo)
  return buildno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_A_LoginRequest::release_buildno() {
  // @@protoc_insertion_point(field_release:message.C_A_LoginRequest.BuildNo)
  clear_has_buildno();
  return buildno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_A_LoginRequest::set_allocated_buildno(::std::string* buildno) {
  if (buildno != NULL) {
    set_has_buildno();
  } else {
    clear_has_buildno();
  }
  buildno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buildno);
  // @@protoc_insertion_point(field_set_allocated:message.C_A_LoginRequest.BuildNo)
}

// required int32 SocketId = 4;
inline bool C_A_LoginRequest::has_socketid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C_A_LoginRequest::set_has_socketid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C_A_LoginRequest::clear_has_socketid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C_A_LoginRequest::clear_socketid() {
  socketid_ = 0;
  clear_has_socketid();
}
inline ::google::protobuf::int32 C_A_LoginRequest::socketid() const {
  // @@protoc_insertion_point(field_get:message.C_A_LoginRequest.SocketId)
  return socketid_;
}
inline void C_A_LoginRequest::set_socketid(::google::protobuf::int32 value) {
  set_has_socketid();
  socketid_ = value;
  // @@protoc_insertion_point(field_set:message.C_A_LoginRequest.SocketId)
}

// -------------------------------------------------------------------

// C_A_LoginRequest1

// required .message.C_A_LoginRequest Login = 1;
inline bool C_A_LoginRequest1::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_A_LoginRequest1::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_A_LoginRequest1::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_A_LoginRequest1::clear_login() {
  if (login_ != NULL) login_->Clear();
  clear_has_login();
}
inline const ::message::C_A_LoginRequest& C_A_LoginRequest1::login() const {
  const ::message::C_A_LoginRequest* p = login_;
  // @@protoc_insertion_point(field_get:message.C_A_LoginRequest1.Login)
  return p != NULL ? *p : *reinterpret_cast<const ::message::C_A_LoginRequest*>(
      &::message::_C_A_LoginRequest_default_instance_);
}
inline ::message::C_A_LoginRequest* C_A_LoginRequest1::release_login() {
  // @@protoc_insertion_point(field_release:message.C_A_LoginRequest1.Login)
  clear_has_login();
  ::message::C_A_LoginRequest* temp = login_;
  login_ = NULL;
  return temp;
}
inline ::message::C_A_LoginRequest* C_A_LoginRequest1::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::message::C_A_LoginRequest;
  }
  // @@protoc_insertion_point(field_mutable:message.C_A_LoginRequest1.Login)
  return login_;
}
inline void C_A_LoginRequest1::set_allocated_login(::message::C_A_LoginRequest* login) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete login_;
  }
  if (login) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      login = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, login, submessage_arena);
    }
    set_has_login();
  } else {
    clear_has_login();
  }
  login_ = login;
  // @@protoc_insertion_point(field_set_allocated:message.C_A_LoginRequest1.Login)
}

// -------------------------------------------------------------------

// C_A_RegisterRequest

// required .message.Ipacket PacketHead = 1;
inline bool C_A_RegisterRequest::has_packethead() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C_A_RegisterRequest::set_has_packethead() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C_A_RegisterRequest::clear_has_packethead() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::message::Ipacket& C_A_RegisterRequest::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_A_RegisterRequest.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_A_RegisterRequest::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_A_RegisterRequest.PacketHead)
  clear_has_packethead();
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_A_RegisterRequest::mutable_packethead() {
  set_has_packethead();
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_A_RegisterRequest.PacketHead)
  return packethead_;
}
inline void C_A_RegisterRequest::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    set_has_packethead();
  } else {
    clear_has_packethead();
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_A_RegisterRequest.PacketHead)
}

// required string AccountName = 2;
inline bool C_A_RegisterRequest::has_accountname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_A_RegisterRequest::set_has_accountname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_A_RegisterRequest::clear_has_accountname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_A_RegisterRequest::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_accountname();
}
inline const ::std::string& C_A_RegisterRequest::accountname() const {
  // @@protoc_insertion_point(field_get:message.C_A_RegisterRequest.AccountName)
  return accountname_.GetNoArena();
}
inline void C_A_RegisterRequest::set_accountname(const ::std::string& value) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C_A_RegisterRequest.AccountName)
}
#if LANG_CXX11
inline void C_A_RegisterRequest::set_accountname(::std::string&& value) {
  set_has_accountname();
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.C_A_RegisterRequest.AccountName)
}
#endif
inline void C_A_RegisterRequest::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C_A_RegisterRequest.AccountName)
}
inline void C_A_RegisterRequest::set_accountname(const char* value, size_t size) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C_A_RegisterRequest.AccountName)
}
inline ::std::string* C_A_RegisterRequest::mutable_accountname() {
  set_has_accountname();
  // @@protoc_insertion_point(field_mutable:message.C_A_RegisterRequest.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_A_RegisterRequest::release_accountname() {
  // @@protoc_insertion_point(field_release:message.C_A_RegisterRequest.AccountName)
  clear_has_accountname();
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_A_RegisterRequest::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    set_has_accountname();
  } else {
    clear_has_accountname();
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:message.C_A_RegisterRequest.AccountName)
}

// required int32 SocketId = 3;
inline bool C_A_RegisterRequest::has_socketid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C_A_RegisterRequest::set_has_socketid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C_A_RegisterRequest::clear_has_socketid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C_A_RegisterRequest::clear_socketid() {
  socketid_ = 0;
  clear_has_socketid();
}
inline ::google::protobuf::int32 C_A_RegisterRequest::socketid() const {
  // @@protoc_insertion_point(field_get:message.C_A_RegisterRequest.SocketId)
  return socketid_;
}
inline void C_A_RegisterRequest::set_socketid(::google::protobuf::int32 value) {
  set_has_socketid();
  socketid_ = value;
  // @@protoc_insertion_point(field_set:message.C_A_RegisterRequest.SocketId)
}

// -------------------------------------------------------------------

// C_W_CreatePlayerRequest

// required .message.Ipacket PacketHead = 1;
inline bool C_W_CreatePlayerRequest::has_packethead() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C_W_CreatePlayerRequest::set_has_packethead() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C_W_CreatePlayerRequest::clear_has_packethead() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::message::Ipacket& C_W_CreatePlayerRequest::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_W_CreatePlayerRequest.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_W_CreatePlayerRequest::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_W_CreatePlayerRequest.PacketHead)
  clear_has_packethead();
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_W_CreatePlayerRequest::mutable_packethead() {
  set_has_packethead();
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_CreatePlayerRequest.PacketHead)
  return packethead_;
}
inline void C_W_CreatePlayerRequest::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    set_has_packethead();
  } else {
    clear_has_packethead();
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_CreatePlayerRequest.PacketHead)
}

// required string PlayerName = 2;
inline bool C_W_CreatePlayerRequest::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_W_CreatePlayerRequest::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_W_CreatePlayerRequest::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_W_CreatePlayerRequest::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playername();
}
inline const ::std::string& C_W_CreatePlayerRequest::playername() const {
  // @@protoc_insertion_point(field_get:message.C_W_CreatePlayerRequest.PlayerName)
  return playername_.GetNoArena();
}
inline void C_W_CreatePlayerRequest::set_playername(const ::std::string& value) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C_W_CreatePlayerRequest.PlayerName)
}
#if LANG_CXX11
inline void C_W_CreatePlayerRequest::set_playername(::std::string&& value) {
  set_has_playername();
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.C_W_CreatePlayerRequest.PlayerName)
}
#endif
inline void C_W_CreatePlayerRequest::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C_W_CreatePlayerRequest.PlayerName)
}
inline void C_W_CreatePlayerRequest::set_playername(const char* value, size_t size) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C_W_CreatePlayerRequest.PlayerName)
}
inline ::std::string* C_W_CreatePlayerRequest::mutable_playername() {
  set_has_playername();
  // @@protoc_insertion_point(field_mutable:message.C_W_CreatePlayerRequest.PlayerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_W_CreatePlayerRequest::release_playername() {
  // @@protoc_insertion_point(field_release:message.C_W_CreatePlayerRequest.PlayerName)
  clear_has_playername();
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_W_CreatePlayerRequest::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    set_has_playername();
  } else {
    clear_has_playername();
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:message.C_W_CreatePlayerRequest.PlayerName)
}

// required int32 Sex = 3;
inline bool C_W_CreatePlayerRequest::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C_W_CreatePlayerRequest::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C_W_CreatePlayerRequest::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C_W_CreatePlayerRequest::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 C_W_CreatePlayerRequest::sex() const {
  // @@protoc_insertion_point(field_get:message.C_W_CreatePlayerRequest.Sex)
  return sex_;
}
inline void C_W_CreatePlayerRequest::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_CreatePlayerRequest.Sex)
}

// -------------------------------------------------------------------

// C_W_Game_LoginRequset

// required .message.Ipacket PacketHead = 1;
inline bool C_W_Game_LoginRequset::has_packethead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_W_Game_LoginRequset::set_has_packethead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_W_Game_LoginRequset::clear_has_packethead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::message::Ipacket& C_W_Game_LoginRequset::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_W_Game_LoginRequset.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_W_Game_LoginRequset::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_W_Game_LoginRequset.PacketHead)
  clear_has_packethead();
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_W_Game_LoginRequset::mutable_packethead() {
  set_has_packethead();
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_Game_LoginRequset.PacketHead)
  return packethead_;
}
inline void C_W_Game_LoginRequset::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    set_has_packethead();
  } else {
    clear_has_packethead();
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_Game_LoginRequset.PacketHead)
}

// required int32 PlayerId = 2;
inline bool C_W_Game_LoginRequset::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C_W_Game_LoginRequset::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C_W_Game_LoginRequset::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C_W_Game_LoginRequset::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 C_W_Game_LoginRequset::playerid() const {
  // @@protoc_insertion_point(field_get:message.C_W_Game_LoginRequset.PlayerId)
  return playerid_;
}
inline void C_W_Game_LoginRequset::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_Game_LoginRequset.PlayerId)
}

// -------------------------------------------------------------------

// C_G_LogoutResponse

// required .message.Ipacket PacketHead = 1;
inline bool C_G_LogoutResponse::has_packethead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_G_LogoutResponse::set_has_packethead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_G_LogoutResponse::clear_has_packethead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::message::Ipacket& C_G_LogoutResponse::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_G_LogoutResponse.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_G_LogoutResponse::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_G_LogoutResponse.PacketHead)
  clear_has_packethead();
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_G_LogoutResponse::mutable_packethead() {
  set_has_packethead();
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_G_LogoutResponse.PacketHead)
  return packethead_;
}
inline void C_G_LogoutResponse::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    set_has_packethead();
  } else {
    clear_has_packethead();
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_G_LogoutResponse.PacketHead)
}

// -------------------------------------------------------------------

// C_W_ChatMessage

// required .message.Ipacket PacketHead = 1;
inline bool C_W_ChatMessage::has_packethead() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C_W_ChatMessage::set_has_packethead() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C_W_ChatMessage::clear_has_packethead() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::message::Ipacket& C_W_ChatMessage::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.C_W_ChatMessage.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* C_W_ChatMessage::release_packethead() {
  // @@protoc_insertion_point(field_release:message.C_W_ChatMessage.PacketHead)
  clear_has_packethead();
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* C_W_ChatMessage::mutable_packethead() {
  set_has_packethead();
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.C_W_ChatMessage.PacketHead)
  return packethead_;
}
inline void C_W_ChatMessage::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(packethead_);
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    set_has_packethead();
  } else {
    clear_has_packethead();
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.C_W_ChatMessage.PacketHead)
}

// required int32 Sender = 2;
inline bool C_W_ChatMessage::has_sender() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C_W_ChatMessage::set_has_sender() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C_W_ChatMessage::clear_has_sender() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C_W_ChatMessage::clear_sender() {
  sender_ = 0;
  clear_has_sender();
}
inline ::google::protobuf::int32 C_W_ChatMessage::sender() const {
  // @@protoc_insertion_point(field_get:message.C_W_ChatMessage.Sender)
  return sender_;
}
inline void C_W_ChatMessage::set_sender(::google::protobuf::int32 value) {
  set_has_sender();
  sender_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_ChatMessage.Sender)
}

// required int32 Recver = 3;
inline bool C_W_ChatMessage::has_recver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C_W_ChatMessage::set_has_recver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C_W_ChatMessage::clear_has_recver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C_W_ChatMessage::clear_recver() {
  recver_ = 0;
  clear_has_recver();
}
inline ::google::protobuf::int32 C_W_ChatMessage::recver() const {
  // @@protoc_insertion_point(field_get:message.C_W_ChatMessage.Recver)
  return recver_;
}
inline void C_W_ChatMessage::set_recver(::google::protobuf::int32 value) {
  set_has_recver();
  recver_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_ChatMessage.Recver)
}

// required int32 MessageType = 4;
inline bool C_W_ChatMessage::has_messagetype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C_W_ChatMessage::set_has_messagetype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C_W_ChatMessage::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C_W_ChatMessage::clear_messagetype() {
  messagetype_ = 0;
  clear_has_messagetype();
}
inline ::google::protobuf::int32 C_W_ChatMessage::messagetype() const {
  // @@protoc_insertion_point(field_get:message.C_W_ChatMessage.MessageType)
  return messagetype_;
}
inline void C_W_ChatMessage::set_messagetype(::google::protobuf::int32 value) {
  set_has_messagetype();
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:message.C_W_ChatMessage.MessageType)
}

// required string Message = 5;
inline bool C_W_ChatMessage::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C_W_ChatMessage::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C_W_ChatMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C_W_ChatMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& C_W_ChatMessage::message() const {
  // @@protoc_insertion_point(field_get:message.C_W_ChatMessage.Message)
  return message_.GetNoArena();
}
inline void C_W_ChatMessage::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.C_W_ChatMessage.Message)
}
#if LANG_CXX11
inline void C_W_ChatMessage::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.C_W_ChatMessage.Message)
}
#endif
inline void C_W_ChatMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.C_W_ChatMessage.Message)
}
inline void C_W_ChatMessage::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.C_W_ChatMessage.Message)
}
inline ::std::string* C_W_ChatMessage::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:message.C_W_ChatMessage.Message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C_W_ChatMessage::release_message() {
  // @@protoc_insertion_point(field_release:message.C_W_ChatMessage.Message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C_W_ChatMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:message.C_W_ChatMessage.Message)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client_2eproto__INCLUDED
