// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_message_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsIpacketImpl();
void InitDefaultsIpacket();
void InitDefaultsPlayerDataImpl();
void InitDefaultsPlayerData();
void InitDefaultsW_C_CreatePlayerResponseImpl();
void InitDefaultsW_C_CreatePlayerResponse();
void InitDefaultsW_C_SelectPlayerResponseImpl();
void InitDefaultsW_C_SelectPlayerResponse();
void InitDefaultsA_C_RegisterResponseImpl();
void InitDefaultsA_C_RegisterResponse();
void InitDefaultsA_C_LoginRequestImpl();
void InitDefaultsA_C_LoginRequest();
inline void InitDefaults() {
  InitDefaultsIpacket();
  InitDefaultsPlayerData();
  InitDefaultsW_C_CreatePlayerResponse();
  InitDefaultsW_C_SelectPlayerResponse();
  InitDefaultsA_C_RegisterResponse();
  InitDefaultsA_C_LoginRequest();
}
}  // namespace protobuf_message_2eproto
namespace message {
class A_C_LoginRequest;
class A_C_LoginRequestDefaultTypeInternal;
extern A_C_LoginRequestDefaultTypeInternal _A_C_LoginRequest_default_instance_;
class A_C_RegisterResponse;
class A_C_RegisterResponseDefaultTypeInternal;
extern A_C_RegisterResponseDefaultTypeInternal _A_C_RegisterResponse_default_instance_;
class Ipacket;
class IpacketDefaultTypeInternal;
extern IpacketDefaultTypeInternal _Ipacket_default_instance_;
class PlayerData;
class PlayerDataDefaultTypeInternal;
extern PlayerDataDefaultTypeInternal _PlayerData_default_instance_;
class W_C_CreatePlayerResponse;
class W_C_CreatePlayerResponseDefaultTypeInternal;
extern W_C_CreatePlayerResponseDefaultTypeInternal _W_C_CreatePlayerResponse_default_instance_;
class W_C_SelectPlayerResponse;
class W_C_SelectPlayerResponseDefaultTypeInternal;
extern W_C_SelectPlayerResponseDefaultTypeInternal _W_C_SelectPlayerResponse_default_instance_;
}  // namespace message
namespace message {

enum SERVICE {
  NONE = 0,
  CLIENT = 1,
  GATESERVER = 2,
  ACCOUNTSERVER = 3,
  WORLDSERVER = 4,
  MONITORSERVER = 5
};
bool SERVICE_IsValid(int value);
const SERVICE SERVICE_MIN = NONE;
const SERVICE SERVICE_MAX = MONITORSERVER;
const int SERVICE_ARRAYSIZE = SERVICE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SERVICE_descriptor();
inline const ::std::string& SERVICE_Name(SERVICE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SERVICE_descriptor(), value);
}
inline bool SERVICE_Parse(
    const ::std::string& name, SERVICE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SERVICE>(
    SERVICE_descriptor(), name, value);
}
enum CHAT {
  MSG_TYPE_WORLD = 0,
  MSG_TYPE_PRIVATE = 1,
  MSG_TYPE_ORG = 2,
  MSG_TYPE_COUNT = 3
};
bool CHAT_IsValid(int value);
const CHAT CHAT_MIN = MSG_TYPE_WORLD;
const CHAT CHAT_MAX = MSG_TYPE_COUNT;
const int CHAT_ARRAYSIZE = CHAT_MAX + 1;

const ::google::protobuf::EnumDescriptor* CHAT_descriptor();
inline const ::std::string& CHAT_Name(CHAT value) {
  return ::google::protobuf::internal::NameOfEnum(
    CHAT_descriptor(), value);
}
inline bool CHAT_Parse(
    const ::std::string& name, CHAT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CHAT>(
    CHAT_descriptor(), name, value);
}
// ===================================================================

class Ipacket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.Ipacket) */ {
 public:
  Ipacket();
  virtual ~Ipacket();

  Ipacket(const Ipacket& from);

  inline Ipacket& operator=(const Ipacket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ipacket(Ipacket&& from) noexcept
    : Ipacket() {
    *this = ::std::move(from);
  }

  inline Ipacket& operator=(Ipacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ipacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ipacket* internal_default_instance() {
    return reinterpret_cast<const Ipacket*>(
               &_Ipacket_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Ipacket* other);
  friend void swap(Ipacket& a, Ipacket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ipacket* New() const PROTOBUF_FINAL { return New(NULL); }

  Ipacket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Ipacket& from);
  void MergeFrom(const Ipacket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Ipacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 DestServerType = 2;
  bool has_destservertype() const;
  void clear_destservertype();
  static const int kDestServerTypeFieldNumber = 2;
  ::google::protobuf::int32 destservertype() const;
  void set_destservertype(::google::protobuf::int32 value);

  // required int32 Id = 4;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 4;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 Stx = 1 [default = 39];
  bool has_stx() const;
  void clear_stx();
  static const int kStxFieldNumber = 1;
  ::google::protobuf::int32 stx() const;
  void set_stx(::google::protobuf::int32 value);

  // required int32 Ckx = 3 [default = 114];
  bool has_ckx() const;
  void clear_ckx();
  static const int kCkxFieldNumber = 3;
  ::google::protobuf::int32 ckx() const;
  void set_ckx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.Ipacket)
 private:
  void set_has_stx();
  void clear_has_stx();
  void set_has_destservertype();
  void clear_has_destservertype();
  void set_has_ckx();
  void clear_has_ckx();
  void set_has_id();
  void clear_has_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 destservertype_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 stx_;
  ::google::protobuf::int32 ckx_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsIpacketImpl();
};
// -------------------------------------------------------------------

class PlayerData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.PlayerData) */ {
 public:
  PlayerData();
  virtual ~PlayerData();

  PlayerData(const PlayerData& from);

  inline PlayerData& operator=(const PlayerData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerData(PlayerData&& from) noexcept
    : PlayerData() {
    *this = ::std::move(from);
  }

  inline PlayerData& operator=(PlayerData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerData* internal_default_instance() {
    return reinterpret_cast<const PlayerData*>(
               &_PlayerData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PlayerData* other);
  friend void swap(PlayerData& a, PlayerData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerData* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerData& from);
  void MergeFrom(const PlayerData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string PlayerName = 2;
  bool has_playername() const;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // required int32 PlayerID = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // required int32 PlayerGold = 3;
  bool has_playergold() const;
  void clear_playergold();
  static const int kPlayerGoldFieldNumber = 3;
  ::google::protobuf::int32 playergold() const;
  void set_playergold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.PlayerData)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_playername();
  void clear_has_playername();
  void set_has_playergold();
  void clear_has_playergold();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 playergold_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsPlayerDataImpl();
};
// -------------------------------------------------------------------

class W_C_CreatePlayerResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.W_C_CreatePlayerResponse) */ {
 public:
  W_C_CreatePlayerResponse();
  virtual ~W_C_CreatePlayerResponse();

  W_C_CreatePlayerResponse(const W_C_CreatePlayerResponse& from);

  inline W_C_CreatePlayerResponse& operator=(const W_C_CreatePlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  W_C_CreatePlayerResponse(W_C_CreatePlayerResponse&& from) noexcept
    : W_C_CreatePlayerResponse() {
    *this = ::std::move(from);
  }

  inline W_C_CreatePlayerResponse& operator=(W_C_CreatePlayerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const W_C_CreatePlayerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const W_C_CreatePlayerResponse* internal_default_instance() {
    return reinterpret_cast<const W_C_CreatePlayerResponse*>(
               &_W_C_CreatePlayerResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(W_C_CreatePlayerResponse* other);
  friend void swap(W_C_CreatePlayerResponse& a, W_C_CreatePlayerResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline W_C_CreatePlayerResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  W_C_CreatePlayerResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const W_C_CreatePlayerResponse& from);
  void MergeFrom(const W_C_CreatePlayerResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(W_C_CreatePlayerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // required int32 Error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // required int32 PlayerId = 3;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 3;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.W_C_CreatePlayerResponse)
 private:
  void set_has_packethead();
  void clear_has_packethead();
  void set_has_error();
  void clear_has_error();
  void set_has_playerid();
  void clear_has_playerid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 playerid_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsW_C_CreatePlayerResponseImpl();
};
// -------------------------------------------------------------------

class W_C_SelectPlayerResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.W_C_SelectPlayerResponse) */ {
 public:
  W_C_SelectPlayerResponse();
  virtual ~W_C_SelectPlayerResponse();

  W_C_SelectPlayerResponse(const W_C_SelectPlayerResponse& from);

  inline W_C_SelectPlayerResponse& operator=(const W_C_SelectPlayerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  W_C_SelectPlayerResponse(W_C_SelectPlayerResponse&& from) noexcept
    : W_C_SelectPlayerResponse() {
    *this = ::std::move(from);
  }

  inline W_C_SelectPlayerResponse& operator=(W_C_SelectPlayerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const W_C_SelectPlayerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const W_C_SelectPlayerResponse* internal_default_instance() {
    return reinterpret_cast<const W_C_SelectPlayerResponse*>(
               &_W_C_SelectPlayerResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(W_C_SelectPlayerResponse* other);
  friend void swap(W_C_SelectPlayerResponse& a, W_C_SelectPlayerResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline W_C_SelectPlayerResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  W_C_SelectPlayerResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const W_C_SelectPlayerResponse& from);
  void MergeFrom(const W_C_SelectPlayerResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(W_C_SelectPlayerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .message.PlayerData PlayerData = 3;
  int playerdata_size() const;
  void clear_playerdata();
  static const int kPlayerDataFieldNumber = 3;
  const ::message::PlayerData& playerdata(int index) const;
  ::message::PlayerData* mutable_playerdata(int index);
  ::message::PlayerData* add_playerdata();
  ::google::protobuf::RepeatedPtrField< ::message::PlayerData >*
      mutable_playerdata();
  const ::google::protobuf::RepeatedPtrField< ::message::PlayerData >&
      playerdata() const;

  // required .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // required int32 AccountId = 2;
  bool has_accountid() const;
  void clear_accountid();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::int32 accountid() const;
  void set_accountid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.W_C_SelectPlayerResponse)
 private:
  void set_has_packethead();
  void clear_has_packethead();
  void set_has_accountid();
  void clear_has_accountid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::message::PlayerData > playerdata_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 accountid_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsW_C_SelectPlayerResponseImpl();
};
// -------------------------------------------------------------------

class A_C_RegisterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.A_C_RegisterResponse) */ {
 public:
  A_C_RegisterResponse();
  virtual ~A_C_RegisterResponse();

  A_C_RegisterResponse(const A_C_RegisterResponse& from);

  inline A_C_RegisterResponse& operator=(const A_C_RegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  A_C_RegisterResponse(A_C_RegisterResponse&& from) noexcept
    : A_C_RegisterResponse() {
    *this = ::std::move(from);
  }

  inline A_C_RegisterResponse& operator=(A_C_RegisterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const A_C_RegisterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const A_C_RegisterResponse* internal_default_instance() {
    return reinterpret_cast<const A_C_RegisterResponse*>(
               &_A_C_RegisterResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(A_C_RegisterResponse* other);
  friend void swap(A_C_RegisterResponse& a, A_C_RegisterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline A_C_RegisterResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  A_C_RegisterResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const A_C_RegisterResponse& from);
  void MergeFrom(const A_C_RegisterResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(A_C_RegisterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // required int32 Error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // required int32 SocketId = 3;
  bool has_socketid() const;
  void clear_socketid();
  static const int kSocketIdFieldNumber = 3;
  ::google::protobuf::int32 socketid() const;
  void set_socketid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.A_C_RegisterResponse)
 private:
  void set_has_packethead();
  void clear_has_packethead();
  void set_has_error();
  void clear_has_error();
  void set_has_socketid();
  void clear_has_socketid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 socketid_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsA_C_RegisterResponseImpl();
};
// -------------------------------------------------------------------

class A_C_LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:message.A_C_LoginRequest) */ {
 public:
  A_C_LoginRequest();
  virtual ~A_C_LoginRequest();

  A_C_LoginRequest(const A_C_LoginRequest& from);

  inline A_C_LoginRequest& operator=(const A_C_LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  A_C_LoginRequest(A_C_LoginRequest&& from) noexcept
    : A_C_LoginRequest() {
    *this = ::std::move(from);
  }

  inline A_C_LoginRequest& operator=(A_C_LoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const A_C_LoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const A_C_LoginRequest* internal_default_instance() {
    return reinterpret_cast<const A_C_LoginRequest*>(
               &_A_C_LoginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(A_C_LoginRequest* other);
  friend void swap(A_C_LoginRequest& a, A_C_LoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline A_C_LoginRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  A_C_LoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const A_C_LoginRequest& from);
  void MergeFrom(const A_C_LoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(A_C_LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string AccountName = 4;
  bool has_accountname() const;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 4;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // required .message.Ipacket PacketHead = 1;
  bool has_packethead() const;
  void clear_packethead();
  static const int kPacketHeadFieldNumber = 1;
  const ::message::Ipacket& packethead() const;
  ::message::Ipacket* release_packethead();
  ::message::Ipacket* mutable_packethead();
  void set_allocated_packethead(::message::Ipacket* packethead);

  // required int32 Error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // required int32 SocketId = 3;
  bool has_socketid() const;
  void clear_socketid();
  static const int kSocketIdFieldNumber = 3;
  ::google::protobuf::int32 socketid() const;
  void set_socketid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:message.A_C_LoginRequest)
 private:
  void set_has_packethead();
  void clear_has_packethead();
  void set_has_error();
  void clear_has_error();
  void set_has_socketid();
  void clear_has_socketid();
  void set_has_accountname();
  void clear_has_accountname();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::message::Ipacket* packethead_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::int32 socketid_;
  friend struct ::protobuf_message_2eproto::TableStruct;
  friend void ::protobuf_message_2eproto::InitDefaultsA_C_LoginRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Ipacket

// required int32 Stx = 1 [default = 39];
inline bool Ipacket::has_stx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Ipacket::set_has_stx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Ipacket::clear_has_stx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Ipacket::clear_stx() {
  stx_ = 39;
  clear_has_stx();
}
inline ::google::protobuf::int32 Ipacket::stx() const {
  // @@protoc_insertion_point(field_get:message.Ipacket.Stx)
  return stx_;
}
inline void Ipacket::set_stx(::google::protobuf::int32 value) {
  set_has_stx();
  stx_ = value;
  // @@protoc_insertion_point(field_set:message.Ipacket.Stx)
}

// required int32 DestServerType = 2;
inline bool Ipacket::has_destservertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ipacket::set_has_destservertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ipacket::clear_has_destservertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ipacket::clear_destservertype() {
  destservertype_ = 0;
  clear_has_destservertype();
}
inline ::google::protobuf::int32 Ipacket::destservertype() const {
  // @@protoc_insertion_point(field_get:message.Ipacket.DestServerType)
  return destservertype_;
}
inline void Ipacket::set_destservertype(::google::protobuf::int32 value) {
  set_has_destservertype();
  destservertype_ = value;
  // @@protoc_insertion_point(field_set:message.Ipacket.DestServerType)
}

// required int32 Ckx = 3 [default = 114];
inline bool Ipacket::has_ckx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Ipacket::set_has_ckx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Ipacket::clear_has_ckx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Ipacket::clear_ckx() {
  ckx_ = 114;
  clear_has_ckx();
}
inline ::google::protobuf::int32 Ipacket::ckx() const {
  // @@protoc_insertion_point(field_get:message.Ipacket.Ckx)
  return ckx_;
}
inline void Ipacket::set_ckx(::google::protobuf::int32 value) {
  set_has_ckx();
  ckx_ = value;
  // @@protoc_insertion_point(field_set:message.Ipacket.Ckx)
}

// required int32 Id = 4;
inline bool Ipacket::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ipacket::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ipacket::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ipacket::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Ipacket::id() const {
  // @@protoc_insertion_point(field_get:message.Ipacket.Id)
  return id_;
}
inline void Ipacket::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:message.Ipacket.Id)
}

// -------------------------------------------------------------------

// PlayerData

// required int32 PlayerID = 1;
inline bool PlayerData::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerData::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerData::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerData::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 PlayerData::playerid() const {
  // @@protoc_insertion_point(field_get:message.PlayerData.PlayerID)
  return playerid_;
}
inline void PlayerData::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.PlayerData.PlayerID)
}

// required string PlayerName = 2;
inline bool PlayerData::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerData::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerData::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerData::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playername();
}
inline const ::std::string& PlayerData::playername() const {
  // @@protoc_insertion_point(field_get:message.PlayerData.PlayerName)
  return playername_.GetNoArena();
}
inline void PlayerData::set_playername(const ::std::string& value) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.PlayerData.PlayerName)
}
#if LANG_CXX11
inline void PlayerData::set_playername(::std::string&& value) {
  set_has_playername();
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.PlayerData.PlayerName)
}
#endif
inline void PlayerData::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.PlayerData.PlayerName)
}
inline void PlayerData::set_playername(const char* value, size_t size) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.PlayerData.PlayerName)
}
inline ::std::string* PlayerData::mutable_playername() {
  set_has_playername();
  // @@protoc_insertion_point(field_mutable:message.PlayerData.PlayerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerData::release_playername() {
  // @@protoc_insertion_point(field_release:message.PlayerData.PlayerName)
  clear_has_playername();
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerData::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    set_has_playername();
  } else {
    clear_has_playername();
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:message.PlayerData.PlayerName)
}

// required int32 PlayerGold = 3;
inline bool PlayerData::has_playergold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerData::set_has_playergold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerData::clear_has_playergold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerData::clear_playergold() {
  playergold_ = 0;
  clear_has_playergold();
}
inline ::google::protobuf::int32 PlayerData::playergold() const {
  // @@protoc_insertion_point(field_get:message.PlayerData.PlayerGold)
  return playergold_;
}
inline void PlayerData::set_playergold(::google::protobuf::int32 value) {
  set_has_playergold();
  playergold_ = value;
  // @@protoc_insertion_point(field_set:message.PlayerData.PlayerGold)
}

// -------------------------------------------------------------------

// W_C_CreatePlayerResponse

// required .message.Ipacket PacketHead = 1;
inline bool W_C_CreatePlayerResponse::has_packethead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void W_C_CreatePlayerResponse::set_has_packethead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void W_C_CreatePlayerResponse::clear_has_packethead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void W_C_CreatePlayerResponse::clear_packethead() {
  if (packethead_ != NULL) packethead_->Clear();
  clear_has_packethead();
}
inline const ::message::Ipacket& W_C_CreatePlayerResponse::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.W_C_CreatePlayerResponse.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* W_C_CreatePlayerResponse::release_packethead() {
  // @@protoc_insertion_point(field_release:message.W_C_CreatePlayerResponse.PacketHead)
  clear_has_packethead();
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* W_C_CreatePlayerResponse::mutable_packethead() {
  set_has_packethead();
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.W_C_CreatePlayerResponse.PacketHead)
  return packethead_;
}
inline void W_C_CreatePlayerResponse::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete packethead_;
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    set_has_packethead();
  } else {
    clear_has_packethead();
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.W_C_CreatePlayerResponse.PacketHead)
}

// required int32 Error = 2;
inline bool W_C_CreatePlayerResponse::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void W_C_CreatePlayerResponse::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void W_C_CreatePlayerResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void W_C_CreatePlayerResponse::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 W_C_CreatePlayerResponse::error() const {
  // @@protoc_insertion_point(field_get:message.W_C_CreatePlayerResponse.Error)
  return error_;
}
inline void W_C_CreatePlayerResponse::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_CreatePlayerResponse.Error)
}

// required int32 PlayerId = 3;
inline bool W_C_CreatePlayerResponse::has_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void W_C_CreatePlayerResponse::set_has_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void W_C_CreatePlayerResponse::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void W_C_CreatePlayerResponse::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 W_C_CreatePlayerResponse::playerid() const {
  // @@protoc_insertion_point(field_get:message.W_C_CreatePlayerResponse.PlayerId)
  return playerid_;
}
inline void W_C_CreatePlayerResponse::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_CreatePlayerResponse.PlayerId)
}

// -------------------------------------------------------------------

// W_C_SelectPlayerResponse

// required .message.Ipacket PacketHead = 1;
inline bool W_C_SelectPlayerResponse::has_packethead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void W_C_SelectPlayerResponse::set_has_packethead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void W_C_SelectPlayerResponse::clear_has_packethead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void W_C_SelectPlayerResponse::clear_packethead() {
  if (packethead_ != NULL) packethead_->Clear();
  clear_has_packethead();
}
inline const ::message::Ipacket& W_C_SelectPlayerResponse::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.W_C_SelectPlayerResponse.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* W_C_SelectPlayerResponse::release_packethead() {
  // @@protoc_insertion_point(field_release:message.W_C_SelectPlayerResponse.PacketHead)
  clear_has_packethead();
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* W_C_SelectPlayerResponse::mutable_packethead() {
  set_has_packethead();
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.W_C_SelectPlayerResponse.PacketHead)
  return packethead_;
}
inline void W_C_SelectPlayerResponse::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete packethead_;
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    set_has_packethead();
  } else {
    clear_has_packethead();
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.W_C_SelectPlayerResponse.PacketHead)
}

// required int32 AccountId = 2;
inline bool W_C_SelectPlayerResponse::has_accountid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void W_C_SelectPlayerResponse::set_has_accountid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void W_C_SelectPlayerResponse::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void W_C_SelectPlayerResponse::clear_accountid() {
  accountid_ = 0;
  clear_has_accountid();
}
inline ::google::protobuf::int32 W_C_SelectPlayerResponse::accountid() const {
  // @@protoc_insertion_point(field_get:message.W_C_SelectPlayerResponse.AccountId)
  return accountid_;
}
inline void W_C_SelectPlayerResponse::set_accountid(::google::protobuf::int32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:message.W_C_SelectPlayerResponse.AccountId)
}

// repeated .message.PlayerData PlayerData = 3;
inline int W_C_SelectPlayerResponse::playerdata_size() const {
  return playerdata_.size();
}
inline void W_C_SelectPlayerResponse::clear_playerdata() {
  playerdata_.Clear();
}
inline const ::message::PlayerData& W_C_SelectPlayerResponse::playerdata(int index) const {
  // @@protoc_insertion_point(field_get:message.W_C_SelectPlayerResponse.PlayerData)
  return playerdata_.Get(index);
}
inline ::message::PlayerData* W_C_SelectPlayerResponse::mutable_playerdata(int index) {
  // @@protoc_insertion_point(field_mutable:message.W_C_SelectPlayerResponse.PlayerData)
  return playerdata_.Mutable(index);
}
inline ::message::PlayerData* W_C_SelectPlayerResponse::add_playerdata() {
  // @@protoc_insertion_point(field_add:message.W_C_SelectPlayerResponse.PlayerData)
  return playerdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::message::PlayerData >*
W_C_SelectPlayerResponse::mutable_playerdata() {
  // @@protoc_insertion_point(field_mutable_list:message.W_C_SelectPlayerResponse.PlayerData)
  return &playerdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::message::PlayerData >&
W_C_SelectPlayerResponse::playerdata() const {
  // @@protoc_insertion_point(field_list:message.W_C_SelectPlayerResponse.PlayerData)
  return playerdata_;
}

// -------------------------------------------------------------------

// A_C_RegisterResponse

// required .message.Ipacket PacketHead = 1;
inline bool A_C_RegisterResponse::has_packethead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void A_C_RegisterResponse::set_has_packethead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void A_C_RegisterResponse::clear_has_packethead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void A_C_RegisterResponse::clear_packethead() {
  if (packethead_ != NULL) packethead_->Clear();
  clear_has_packethead();
}
inline const ::message::Ipacket& A_C_RegisterResponse::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.A_C_RegisterResponse.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* A_C_RegisterResponse::release_packethead() {
  // @@protoc_insertion_point(field_release:message.A_C_RegisterResponse.PacketHead)
  clear_has_packethead();
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* A_C_RegisterResponse::mutable_packethead() {
  set_has_packethead();
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.A_C_RegisterResponse.PacketHead)
  return packethead_;
}
inline void A_C_RegisterResponse::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete packethead_;
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    set_has_packethead();
  } else {
    clear_has_packethead();
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.A_C_RegisterResponse.PacketHead)
}

// required int32 Error = 2;
inline bool A_C_RegisterResponse::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void A_C_RegisterResponse::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void A_C_RegisterResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void A_C_RegisterResponse::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 A_C_RegisterResponse::error() const {
  // @@protoc_insertion_point(field_get:message.A_C_RegisterResponse.Error)
  return error_;
}
inline void A_C_RegisterResponse::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:message.A_C_RegisterResponse.Error)
}

// required int32 SocketId = 3;
inline bool A_C_RegisterResponse::has_socketid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void A_C_RegisterResponse::set_has_socketid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void A_C_RegisterResponse::clear_has_socketid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void A_C_RegisterResponse::clear_socketid() {
  socketid_ = 0;
  clear_has_socketid();
}
inline ::google::protobuf::int32 A_C_RegisterResponse::socketid() const {
  // @@protoc_insertion_point(field_get:message.A_C_RegisterResponse.SocketId)
  return socketid_;
}
inline void A_C_RegisterResponse::set_socketid(::google::protobuf::int32 value) {
  set_has_socketid();
  socketid_ = value;
  // @@protoc_insertion_point(field_set:message.A_C_RegisterResponse.SocketId)
}

// -------------------------------------------------------------------

// A_C_LoginRequest

// required .message.Ipacket PacketHead = 1;
inline bool A_C_LoginRequest::has_packethead() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void A_C_LoginRequest::set_has_packethead() {
  _has_bits_[0] |= 0x00000002u;
}
inline void A_C_LoginRequest::clear_has_packethead() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void A_C_LoginRequest::clear_packethead() {
  if (packethead_ != NULL) packethead_->Clear();
  clear_has_packethead();
}
inline const ::message::Ipacket& A_C_LoginRequest::packethead() const {
  const ::message::Ipacket* p = packethead_;
  // @@protoc_insertion_point(field_get:message.A_C_LoginRequest.PacketHead)
  return p != NULL ? *p : *reinterpret_cast<const ::message::Ipacket*>(
      &::message::_Ipacket_default_instance_);
}
inline ::message::Ipacket* A_C_LoginRequest::release_packethead() {
  // @@protoc_insertion_point(field_release:message.A_C_LoginRequest.PacketHead)
  clear_has_packethead();
  ::message::Ipacket* temp = packethead_;
  packethead_ = NULL;
  return temp;
}
inline ::message::Ipacket* A_C_LoginRequest::mutable_packethead() {
  set_has_packethead();
  if (packethead_ == NULL) {
    packethead_ = new ::message::Ipacket;
  }
  // @@protoc_insertion_point(field_mutable:message.A_C_LoginRequest.PacketHead)
  return packethead_;
}
inline void A_C_LoginRequest::set_allocated_packethead(::message::Ipacket* packethead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete packethead_;
  }
  if (packethead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      packethead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packethead, submessage_arena);
    }
    set_has_packethead();
  } else {
    clear_has_packethead();
  }
  packethead_ = packethead;
  // @@protoc_insertion_point(field_set_allocated:message.A_C_LoginRequest.PacketHead)
}

// required int32 Error = 2;
inline bool A_C_LoginRequest::has_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void A_C_LoginRequest::set_has_error() {
  _has_bits_[0] |= 0x00000004u;
}
inline void A_C_LoginRequest::clear_has_error() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void A_C_LoginRequest::clear_error() {
  error_ = 0;
  clear_has_error();
}
inline ::google::protobuf::int32 A_C_LoginRequest::error() const {
  // @@protoc_insertion_point(field_get:message.A_C_LoginRequest.Error)
  return error_;
}
inline void A_C_LoginRequest::set_error(::google::protobuf::int32 value) {
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:message.A_C_LoginRequest.Error)
}

// required int32 SocketId = 3;
inline bool A_C_LoginRequest::has_socketid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void A_C_LoginRequest::set_has_socketid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void A_C_LoginRequest::clear_has_socketid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void A_C_LoginRequest::clear_socketid() {
  socketid_ = 0;
  clear_has_socketid();
}
inline ::google::protobuf::int32 A_C_LoginRequest::socketid() const {
  // @@protoc_insertion_point(field_get:message.A_C_LoginRequest.SocketId)
  return socketid_;
}
inline void A_C_LoginRequest::set_socketid(::google::protobuf::int32 value) {
  set_has_socketid();
  socketid_ = value;
  // @@protoc_insertion_point(field_set:message.A_C_LoginRequest.SocketId)
}

// required string AccountName = 4;
inline bool A_C_LoginRequest::has_accountname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void A_C_LoginRequest::set_has_accountname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void A_C_LoginRequest::clear_has_accountname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void A_C_LoginRequest::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_accountname();
}
inline const ::std::string& A_C_LoginRequest::accountname() const {
  // @@protoc_insertion_point(field_get:message.A_C_LoginRequest.AccountName)
  return accountname_.GetNoArena();
}
inline void A_C_LoginRequest::set_accountname(const ::std::string& value) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:message.A_C_LoginRequest.AccountName)
}
#if LANG_CXX11
inline void A_C_LoginRequest::set_accountname(::std::string&& value) {
  set_has_accountname();
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.A_C_LoginRequest.AccountName)
}
#endif
inline void A_C_LoginRequest::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.A_C_LoginRequest.AccountName)
}
inline void A_C_LoginRequest::set_accountname(const char* value, size_t size) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.A_C_LoginRequest.AccountName)
}
inline ::std::string* A_C_LoginRequest::mutable_accountname() {
  set_has_accountname();
  // @@protoc_insertion_point(field_mutable:message.A_C_LoginRequest.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* A_C_LoginRequest::release_accountname() {
  // @@protoc_insertion_point(field_release:message.A_C_LoginRequest.AccountName)
  clear_has_accountname();
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void A_C_LoginRequest::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    set_has_accountname();
  } else {
    clear_has_accountname();
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:message.A_C_LoginRequest.AccountName)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::message::SERVICE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::SERVICE>() {
  return ::message::SERVICE_descriptor();
}
template <> struct is_proto_enum< ::message::CHAT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::message::CHAT>() {
  return ::message::CHAT_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
